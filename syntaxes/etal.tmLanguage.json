{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Etal",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#paren-expression"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#icrfunctions"
    },
    {
      "include": "#storage"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.etal",
          "match": "\\b(if|while|for|return|break)\\b"
        },
        {
          "name": "keyword.other.etal",
          "match": "\\b(print)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.etal",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.etal",
          "match": "\\\\."
        }
      ]
    },
    "paren-expression": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "punctuation.paren.open.etal" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.paren.close.etal" }
      },
      "name": "expression.group",
      "patterns": [{ "include": "#expression" }]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-dash",
          "begin": "//",
          "end": "\n"
        },
        {
          "name": "comment.block.etal",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "icrfunctions": {
      "patterns": [
        {
          "name": "support.function",
          "match": "\\b(ICR_CreateFont|ICR_SetLocalUserData|ICR_Window_Enable|ICR_GetLocalUserData|ICR_MessageBox|ICR_SetFeature|ICR_GetSystemData)\\b"
        }
      ]
    },
    "storage": {
      "patterns": [
        {
          "name": "storage.type.etal",
          "match": "\\b(function)\\b"
        },
        {
          "name": "variable.etal",
          "match": "\\b(local)\\b"
        }
      ]
    }
  },
  "scopeName": "source.moc"
}
